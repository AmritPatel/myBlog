INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/version.pyc:/Applications/GarminDb_Darwin_1.6.0/garmin has been tested on Python 3.7.5
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/version.pyc:/Applications/GarminDb_Darwin_1.6.0/garmin 1.6.0
INFO:root:Enabled statistics: [<Statistics.monitoring: 1>, <Statistics.steps: 2>, <Statistics.itime: 3>, <Statistics.sleep: 4>, <Statistics.rhr: 5>, <Statistics.weight: 6>, <Statistics.activities: 7>]
INFO:garmin.py:___Downloading Latest Data___
INFO:root:login: Amrit Patel (amrit_d_patel)
INFO:root:Fetching 10 activities to /Users/amrit/HealthData/FitFiles/Activities
INFO:root:get_activity_types: '/Users/amrit/HealthData/FitFiles/Activities'
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Ignoring /Users/amrit/HealthData/FitFiles/Activities/activity_types.json (exists)
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/download_garmin.pyc:Geting activities: '/Users/amrit/HealthData/FitFiles/Activities' (10)
INFO:root:get_activity_summaries
INFO:root:get_activities: <filter object at 0x10f3aaad0> (5142541235)
INFO:root:get_activities: /Users/amrit/HealthData/FitFiles/Activities/activity_5142541235.json <- {'activityId': 5142541235, 'activityName': 'Hua Hin Running', 'description': None, 'startTimeLocal': '2020-06-25 17:23:04', 'startTimeGMT': '2020-06-25 10:23:04', 'activityType': {'typeId': 1, 'typeKey': 'running', 'parentTypeId': 17, 'sortOrder': 3}, 'eventType': {'typeId': 9, 'typeKey': 'uncategorized', 'sortOrder': 10}, 'comments': None, 'parentId': None, 'distance': 6960.5400390625, 'duration': 2230.923095703125, 'elapsedDuration': 2230923.095703125, 'movingDuration': 2227.8280029296875, 'elevationGain': 24.0, 'elevationLoss': 19.0, 'averageSpeed': 3.119999885559082, 'maxSpeed': 3.5179998874664307, 'startLatitude': 12.461029188707471, 'startLongitude': 99.97408708557487, 'hasPolyline': True, 'ownerId': 1483772, 'ownerDisplayName': 'amrit_d_patel', 'ownerFullName': 'Amrit Patel', 'ownerProfileImageUrlSmall': 'https://s3.amazonaws.com/garmin-connect-prod/profile_images/0f53da4f-7f15-4761-9b70-1f17e8212096-1483772.png', 'ownerProfileImageUrlMedium': 'https://s3.amazonaws.com/garmin-connect-prod/profile_images/d0a8f8d1-2cce-4b49-98c2-153b9be79d9f-1483772.png', 'ownerProfileImageUrlLarge': 'https://s3.amazonaws.com/garmin-connect-prod/profile_images/421402cd-7c65-494a-a9a3-f52584d29973-1483772.png', 'calories': 496.0, 'averageHR': 161.0, 'maxHR': 184.0, 'averageRunningCadenceInStepsPerMinute': 164.09375, 'maxRunningCadenceInStepsPerMinute': 174.0, 'averageBikingCadenceInRevPerMinute': None, 'maxBikingCadenceInRevPerMinute': None, 'averageSwimCadenceInStrokesPerMinute': None, 'maxSwimCadenceInStrokesPerMinute': None, 'averageSwolf': None, 'activeLengths': None, 'steps': 6104, 'conversationUuid': None, 'conversationPk': None, 'numberOfActivityLikes': None, 'numberOfActivityComments': None, 'likedByUser': None, 'commentedByUser': None, 'activityLikeDisplayNames': None, 'activityLikeFullNames': None, 'requestorRelationship': None, 'userRoles': ['ROLE_CONNECTUSER', 'ROLE_FITNESS_USER', 'ROLE_WELLNESS_USER', 'ROLE_OUTDOOR_USER', 'ROLE_CONNECT_2_USER'], 'privacy': {'typeId': 1, 'typeKey': 'public'}, 'userPro': False, 'courseId': None, 'poolLength': None, 'unitOfPoolLength': None, 'hasVideo': False, 'videoUrl': None, 'timeZoneId': 134, 'beginTimestamp': 1593080584000, 'sportTypeId': 1, 'avgPower': None, 'maxPower': None, 'aerobicTrainingEffect': 4.5, 'anaerobicTrainingEffect': 2.0, 'strokes': None, 'normPower': None, 'leftBalance': None, 'rightBalance': None, 'avgLeftBalance': None, 'max20MinPower': None, 'avgVerticalOscillation': None, 'avgGroundContactTime': None, 'avgStrideLength': 114.0815422280028, 'avgFractionalCadence': None, 'maxFractionalCadence': None, 'trainingStressScore': None, 'intensityFactor': None, 'vO2MaxValue': 48.0, 'avgVerticalRatio': None, 'avgGroundContactBalance': None, 'lactateThresholdBpm': None, 'lactateThresholdSpeed': None, 'maxFtp': None, 'avgStrokeDistance': None, 'avgStrokeCadence': None, 'maxStrokeCadence': None, 'workoutId': None, 'avgStrokes': None, 'minStrokes': None, 'deviceId': 3950457615, 'minTemperature': 29.0, 'maxTemperature': None, 'minElevation': -839.9999618530273, 'maxElevation': 580.0000190734863, 'avgDoubleCadence': None, 'maxDoubleCadence': 174.0, 'summarizedExerciseSets': None, 'maxDepth': None, 'avgDepth': None, 'surfaceInterval': None, 'startN2': None, 'endN2': None, 'startCns': None, 'endCns': None, 'summarizedDiveInfo': {'weight': None, 'weightUnit': None, 'visibility': None, 'visibilityUnit': None, 'surfaceCondition': None, 'current': None, 'waterType': None, 'waterDensity': None, 'summarizedDiveGases': [], 'totalSurfaceTime': None}, 'activityLikeAuthors': None, 'avgVerticalSpeed': None, 'maxVerticalSpeed': 0.40000009536743164, 'floorsClimbed': None, 'floorsDescended': None, 'manufacturer': None, 'diveNumber': None, 'locationName': 'Hua Hin', 'bottomTime': None, 'lapCount': 3, 'endLatitude': 12.461009407415986, 'endLongitude': 99.97377896681428, 'minAirSpeed': None, 'maxAirSpeed': None, 'avgAirSpeed': None, 'avgWindYawAngle': None, 'minCda': None, 'maxCda': None, 'avgCda': None, 'avgWattsPerCda': None, 'flow': None, 'grit': None, 'jumpCount': None, 'caloriesEstimated': None, 'caloriesConsumed': None, 'waterEstimated': None, 'waterConsumed': None, 'maxAvgPower_1': None, 'maxAvgPower_2': None, 'maxAvgPower_5': None, 'maxAvgPower_10': None, 'maxAvgPower_20': None, 'maxAvgPower_30': None, 'maxAvgPower_60': None, 'maxAvgPower_120': None, 'maxAvgPower_300': None, 'maxAvgPower_600': None, 'maxAvgPower_1200': None, 'maxAvgPower_1800': None, 'maxAvgPower_3600': None, 'maxAvgPower_7200': None, 'maxAvgPower_18000': None, 'excludeFromPowerCurveReports': None, 'totalSets': None, 'activeSets': None, 'totalReps': None, 'minRespirationRate': None, 'maxRespirationRate': None, 'avgRespirationRate': None, 'trainingEffectLabel': None, 'activityTrainingLoad': None, 'avgFlow': None, 'avgGrit': None, 'minActivityLapDuration': 731.2550048828125, 'startStress': None, 'endStress': None, 'differenceStress': None, 'aerobicTrainingEffectMessage': 'HIGHLY_IMPROVING_LACTATE_THRESHOLD_13', 'anaerobicTrainingEffectMessage': 'MAINTAINING_ANAEROBIC_BASE_1', 'splitSummaries': [], 'hasSplits': False, 'favorite': False, 'decoDive': None, 'purposeful': False, 'elevationCorrected': False, 'atpActivity': False, 'pr': False, 'autoCalcCalories': False, 'parent': False}
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/FitFiles/Activities/activity_details_5142541235.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/FitFiles/Activities/activity_details_5142541235.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/tmpxojlxs_s/activity_5142541235.zip
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/tmpxojlxs_s/activity_5142541235.zip
INFO:root:get_activities: <filter object at 0x10f384610> (5137726632)
INFO:root:get_activities: /Users/amrit/HealthData/FitFiles/Activities/activity_5137726632.json <- {'activityId': 5137726632, 'activityName': 'Hua Hin Walking', 'description': None, 'startTimeLocal': '2020-06-24 18:29:02', 'startTimeGMT': '2020-06-24 11:29:02', 'activityType': {'typeId': 9, 'typeKey': 'walking', 'parentTypeId': 17, 'sortOrder': 27}, 'eventType': {'typeId': 9, 'typeKey': 'uncategorized', 'sortOrder': 10}, 'comments': None, 'parentId': None, 'distance': 2262.320068359375, 'duration': 2290.800048828125, 'elapsedDuration': 2290800.048828125, 'movingDuration': 1981.0, 'elevationGain': 2.0, 'elevationLoss': 23.0, 'averageSpeed': 0.9879999756813049, 'maxSpeed': 1.819000005722046, 'startLatitude': 12.460528118535876, 'startLongitude': 99.97377444058657, 'hasPolyline': True, 'ownerId': 1483772, 'ownerDisplayName': 'amrit_d_patel', 'ownerFullName': 'Amrit Patel', 'ownerProfileImageUrlSmall': 'https://s3.amazonaws.com/garmin-connect-prod/profile_images/0f53da4f-7f15-4761-9b70-1f17e8212096-1483772.png', 'ownerProfileImageUrlMedium': 'https://s3.amazonaws.com/garmin-connect-prod/profile_images/d0a8f8d1-2cce-4b49-98c2-153b9be79d9f-1483772.png', 'ownerProfileImageUrlLarge': 'https://s3.amazonaws.com/garmin-connect-prod/profile_images/421402cd-7c65-494a-a9a3-f52584d29973-1483772.png', 'calories': 152.0, 'averageHR': 91.0, 'maxHR': 107.0, 'averageRunningCadenceInStepsPerMinute': 65.125, 'maxRunningCadenceInStepsPerMinute': 224.0, 'averageBikingCadenceInRevPerMinute': None, 'maxBikingCadenceInRevPerMinute': None, 'averageSwimCadenceInStrokesPerMinute': None, 'maxSwimCadenceInStrokesPerMinute': None, 'averageSwolf': None, 'activeLengths': None, 'steps': 3166, 'conversationUuid': None, 'conversationPk': None, 'numberOfActivityLikes': None, 'numberOfActivityComments': None, 'likedByUser': None, 'commentedByUser': None, 'activityLikeDisplayNames': None, 'activityLikeFullNames': None, 'requestorRelationship': None, 'userRoles': ['ROLE_CONNECTUSER', 'ROLE_FITNESS_USER', 'ROLE_WELLNESS_USER', 'ROLE_OUTDOOR_USER', 'ROLE_CONNECT_2_USER'], 'privacy': {'typeId': 1, 'typeKey': 'public'}, 'userPro': False, 'courseId': None, 'poolLength': None, 'unitOfPoolLength': None, 'hasVideo': False, 'videoUrl': None, 'timeZoneId': 134, 'beginTimestamp': 1592998142000, 'sportTypeId': 0, 'avgPower': None, 'maxPower': None, 'aerobicTrainingEffect': 0.20000000298023224, 'anaerobicTrainingEffect': 0.0, 'strokes': None, 'normPower': None, 'leftBalance': None, 'rightBalance': None, 'avgLeftBalance': None, 'max20MinPower': None, 'avgVerticalOscillation': None, 'avgGroundContactTime': None, 'avgStrideLength': 96.53236065408572, 'avgFractionalCadence': None, 'maxFractionalCadence': None, 'trainingStressScore': None, 'intensityFactor': None, 'vO2MaxValue': None, 'avgVerticalRatio': None, 'avgGroundContactBalance': None, 'lactateThresholdBpm': None, 'lactateThresholdSpeed': None, 'maxFtp': None, 'avgStrokeDistance': None, 'avgStrokeCadence': None, 'maxStrokeCadence': None, 'workoutId': None, 'avgStrokes': None, 'minStrokes': None, 'deviceId': 3950457615, 'minTemperature': 29.0, 'maxTemperature': None, 'minElevation': 44979.998779296875, 'maxElevation': 46639.99938964844, 'avgDoubleCadence': None, 'maxDoubleCadence': 224.0, 'summarizedExerciseSets': None, 'maxDepth': None, 'avgDepth': None, 'surfaceInterval': None, 'startN2': None, 'endN2': None, 'startCns': None, 'endCns': None, 'summarizedDiveInfo': {'weight': None, 'weightUnit': None, 'visibility': None, 'visibilityUnit': None, 'surfaceCondition': None, 'current': None, 'waterType': None, 'waterDensity': None, 'summarizedDiveGases': [], 'totalSurfaceTime': None}, 'activityLikeAuthors': None, 'avgVerticalSpeed': None, 'maxVerticalSpeed': 0.6666666666666666, 'floorsClimbed': None, 'floorsDescended': None, 'manufacturer': None, 'diveNumber': None, 'locationName': 'Hua Hin', 'bottomTime': None, 'lapCount': 2, 'endLatitude': 12.457020292058587, 'endLongitude': 99.97745979577303, 'minAirSpeed': None, 'maxAirSpeed': None, 'avgAirSpeed': None, 'avgWindYawAngle': None, 'minCda': None, 'maxCda': None, 'avgCda': None, 'avgWattsPerCda': None, 'flow': None, 'grit': None, 'jumpCount': None, 'caloriesEstimated': None, 'caloriesConsumed': None, 'waterEstimated': None, 'waterConsumed': None, 'maxAvgPower_1': None, 'maxAvgPower_2': None, 'maxAvgPower_5': None, 'maxAvgPower_10': None, 'maxAvgPower_20': None, 'maxAvgPower_30': None, 'maxAvgPower_60': None, 'maxAvgPower_120': None, 'maxAvgPower_300': None, 'maxAvgPower_600': None, 'maxAvgPower_1200': None, 'maxAvgPower_1800': None, 'maxAvgPower_3600': None, 'maxAvgPower_7200': None, 'maxAvgPower_18000': None, 'excludeFromPowerCurveReports': None, 'totalSets': None, 'activeSets': None, 'totalReps': None, 'minRespirationRate': None, 'maxRespirationRate': None, 'avgRespirationRate': None, 'trainingEffectLabel': None, 'activityTrainingLoad': None, 'avgFlow': None, 'avgGrit': None, 'minActivityLapDuration': 799.6220092773438, 'startStress': None, 'endStress': None, 'differenceStress': None, 'aerobicTrainingEffectMessage': 'NO_AEROBIC_BENEFIT_18', 'anaerobicTrainingEffectMessage': 'NO_ANAEROBIC_BENEFIT_0', 'splitSummaries': [], 'hasSplits': False, 'favorite': False, 'decoDive': None, 'purposeful': False, 'elevationCorrected': False, 'atpActivity': False, 'pr': False, 'autoCalcCalories': False, 'parent': False}
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/FitFiles/Activities/activity_details_5137726632.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/FitFiles/Activities/activity_details_5137726632.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/tmpxojlxs_s/activity_5137726632.zip
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/tmpxojlxs_s/activity_5137726632.zip
INFO:root:get_activities: <filter object at 0x10f32ec10> (5123096977)
INFO:root:get_activities: <filter object at 0x10f38a850> (5121421301)
INFO:root:get_activities: <filter object at 0x10f38a590> (5111190495)
INFO:root:get_activities: <filter object at 0x10f38a850> (5106637204)
INFO:root:get_activities: <filter object at 0x10f38a590> (5097824185)
INFO:root:get_activities: <filter object at 0x10f38a850> (5087868624)
INFO:root:get_activities: <filter object at 0x10f38a590> (5086251451)
INFO:root:get_activities: <filter object at 0x10f38a850> (5081804598)
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/download_garmin.pyc:unzip_files: /Users/amrit/HealthData/FitFiles/Activities
INFO:utilities.db:MonitoringDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Found primary key column timestamp for table MonitoringInfo
INFO:utilities.db_object:Found primary key time_col_name timestamp for table MonitoringInfo
INFO:utilities.db_object:Found primary key column activity_type for table MonitoringInfo
INFO:utilities.db_object:Found primary key column timestamp for table MonitoringHeartRate
INFO:utilities.db_object:Found primary key time_col_name timestamp for table MonitoringHeartRate
INFO:utilities.db_object:Found primary key column timestamp for table MonitoringIntensity
INFO:utilities.db_object:Found primary key time_col_name timestamp for table MonitoringIntensity
INFO:utilities.db_object:Found primary key column timestamp for table MonitoringClimb
INFO:utilities.db_object:Found primary key time_col_name timestamp for table MonitoringClimb
INFO:utilities.db_object:Found primary key column timestamp for table Monitoring
INFO:utilities.db_object:Found primary key time_col_name timestamp for table Monitoring
INFO:utilities.db_object:Found primary key column activity_type for table Monitoring
INFO:utilities.db_object:Found primary key column timestamp for table MonitoringRespirationRate
INFO:utilities.db_object:Found primary key time_col_name timestamp for table MonitoringRespirationRate
INFO:utilities.db_object:Found primary key column timestamp for table MonitoringPulseOx
INFO:utilities.db_object:Found primary key time_col_name timestamp for table MonitoringPulseOx
INFO:garmin.py:Recent monitoring data not found, using: 2019-01-01 : 0
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Found primary key column key for table Attributes
INFO:utilities.db_object:Found time_col_name timestamp for table Attributes
INFO:utilities.db_object:Found primary key column serial_number for table Device
INFO:utilities.db_object:Found time_col_name timestamp for table Device
INFO:utilities.db_object:Found primary key column timestamp for table DeviceInfo
INFO:utilities.db_object:Found primary key time_col_name timestamp for table DeviceInfo
INFO:utilities.db_object:Found primary key column serial_number for table DeviceInfo
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column day for table Weight
INFO:utilities.db_object:Found primary key time_col_name day for table Weight
INFO:utilities.db_object:Found primary key column timestamp for table Stress
INFO:utilities.db_object:Found primary key time_col_name timestamp for table Stress
INFO:utilities.db_object:Found primary key column day for table Sleep
INFO:utilities.db_object:Found primary key time_col_name day for table Sleep
INFO:utilities.db_object:Found primary key column timestamp for table SleepEvents
INFO:utilities.db_object:Found primary key time_col_name timestamp for table SleepEvents
INFO:utilities.db_object:Found primary key column day for table RestingHeartRate
INFO:utilities.db_object:Found primary key time_col_name day for table RestingHeartRate
INFO:utilities.db_object:Found primary key column day for table DailySummary
INFO:utilities.db_object:Found primary key time_col_name day for table DailySummary
INFO:garmin.py:Downloading latest sleep data from: 2020-06-20
INFO:root:Date range to update: 2020-06-20 (6) to /Users/amrit/HealthData/Sleep
INFO:root:Geting sleep: 2020-06-20 (6)
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Ignoring /Users/amrit/HealthData/Sleep/sleep_2020-06-20.json (exists)
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/Sleep/sleep_2020-06-21.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/Sleep/sleep_2020-06-21.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/Sleep/sleep_2020-06-22.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/Sleep/sleep_2020-06-22.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/Sleep/sleep_2020-06-23.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/Sleep/sleep_2020-06-23.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/Sleep/sleep_2020-06-24.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/Sleep/sleep_2020-06-24.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/Sleep/sleep_2020-06-25.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/Sleep/sleep_2020-06-25.json
INFO:root:Saved sleep files for 2020-06-20 (6) to /Users/amrit/HealthData/Sleep for processing
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:garmin.py:Recent weight data not found, using: 2019-01-01 : 0
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:garmin.py:Downloading latest rhr data from: 2020-06-20
INFO:root:Date range to update: 2020-06-20 (6) to /Users/amrit/HealthData/RHR
INFO:root:Geting rhr: 2020-06-20 (6)
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Ignoring /Users/amrit/HealthData/RHR/rhr_2020-06-20.json (exists)
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/RHR/rhr_2020-06-21.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/RHR/rhr_2020-06-21.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/RHR/rhr_2020-06-22.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/RHR/rhr_2020-06-22.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/RHR/rhr_2020-06-23.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/RHR/rhr_2020-06-23.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/RHR/rhr_2020-06-24.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/RHR/rhr_2020-06-24.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Downloading /Users/amrit/HealthData/RHR/rhr_2020-06-25.json
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/rest_client.pyc:Writing /Users/amrit/HealthData/RHR/rhr_2020-06-25.json
INFO:root:Saved rhr files for 2020-06-20 (6) to /Users/amrit/HealthData/RHR for processing
INFO:garmin.py:___Importing Latest Data___
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin.pyc:Processing profile data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles looking for files matching profile\.json
INFO:root:Found 1 json files for profile\.json in /Users/amrit/HealthData/FitFiles
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:root:Processing 1 json files
INFO:root:DB updated with 4 entries from /Users/amrit/HealthData/FitFiles/profile.json
INFO:root:DB updated with 4 entries from 1 files.
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/fit_data.pyc:Processing [<FileType.settings: 2>] FIT data from /Users/amrit/HealthData/FitFiles
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles looking for files matching \w+\.(fit|FIT)
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin.pyc:Processing weight data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/Weight looking for files matching weight_\d{4}-\d{2}-\d{2}\.json and created after 2020-06-25 11:40:00.544144
INFO:root:Found 0 json files for weight_\d{4}-\d{2}-\d{2}\.json in /Users/amrit/HealthData/Weight
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin.pyc:Processing daily summary data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Monitoring looking for files matching daily_summary_\d{4}-\d{2}-\d{2}\.json and created after 2020-06-25 11:40:00.624501
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Monitoring/2019 looking for files matching daily_summary_\d{4}-\d{2}-\d{2}\.json and created after 2020-06-25 11:40:00.625891
INFO:root:Found 0 json files for daily_summary_\d{4}-\d{2}-\d{2}\.json in /Users/amrit/HealthData/FitFiles/Monitoring
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin.pyc:Processing daily hydration data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Monitoring looking for files matching hydration_\d{4}-\d{2}-\d{2}\.json and created after 2020-06-25 11:40:00.724222
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Monitoring/2019 looking for files matching hydration_\d{4}-\d{2}-\d{2}\.json and created after 2020-06-25 11:40:00.724883
INFO:root:Found 0 json files for hydration_\d{4}-\d{2}-\d{2}\.json in /Users/amrit/HealthData/FitFiles/Monitoring
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/fit_data.pyc:Processing [<FileType.monitoring_b: 32>] FIT data from /Users/amrit/HealthData/FitFiles/Monitoring
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Monitoring looking for files matching \w+\.(fit|FIT) and created after 2020-06-25 11:40:00.833814
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Monitoring/2019 looking for files matching \w+\.(fit|FIT) and created after 2020-06-25 11:40:00.834021
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin.pyc:Processing sleep data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/Sleep looking for files matching sleep_\d{4}-\d{2}-\d{2}\.json and created after 2020-06-25 11:40:00.889523
INFO:root:Found 5 json files for sleep_\d{4}-\d{2}-\d{2}\.json in /Users/amrit/HealthData/Sleep
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:root:Processing 5 json files
INFO:root:Importing 2020-06-25 with REM data
INFO:root:DB updated with 27 entries from /Users/amrit/HealthData/Sleep/sleep_2020-06-25.json
INFO:root:Importing 2020-06-24 with REM data
INFO:root:DB updated with 28 entries from /Users/amrit/HealthData/Sleep/sleep_2020-06-24.json
INFO:root:Importing 2020-06-23 with REM data
INFO:root:DB updated with 25 entries from /Users/amrit/HealthData/Sleep/sleep_2020-06-23.json
INFO:root:Importing 2020-06-22 without REM data
WARNING:root:No data saved for /Users/amrit/HealthData/Sleep/sleep_2020-06-22.json
INFO:root:Importing 2020-06-21 without REM data
WARNING:root:No data saved for /Users/amrit/HealthData/Sleep/sleep_2020-06-21.json
INFO:root:DB updated with 80 entries from 5 files.
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin.pyc:Processing rhr data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/RHR looking for files matching rhr_\d{4}-\d{2}-\d{2}\.json and created after 2020-06-25 11:40:02.147582
INFO:root:Found 5 json files for rhr_\d{4}-\d{2}-\d{2}\.json in /Users/amrit/HealthData/RHR
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: 0 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:root:Processing 5 json files
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/RHR/rhr_2020-06-25.json
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/RHR/rhr_2020-06-24.json
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/RHR/rhr_2020-06-23.json
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/RHR/rhr_2020-06-22.json
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/RHR/rhr_2020-06-21.json
INFO:root:DB updated with 5 entries from 5 files.
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin_activities.pyc:Processing activities tcx data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Activities looking for files matching .*\.tcx and created after 2020-06-25 11:40:02.334190
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin_activities.pyc:Processing latest activities summary data from /Users/amrit/HealthData/FitFiles/Activities
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Activities looking for files matching activity_\d*\.json and created after 2020-06-25 11:40:02.353714
INFO:root:Found 2 json files for activity_\d*\.json in /Users/amrit/HealthData/FitFiles/Activities
INFO:utilities.db:ActivitiesDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:utilities.db_object:Found primary key column activity_id for table Activities
INFO:utilities.db_object:Found time_col_name start_time for table Activities
INFO:utilities.db_object:Found primary key column activity_id for table ActivityLaps
INFO:utilities.db_object:Found primary key column lap for table ActivityLaps
INFO:utilities.db_object:Found time_col_name start_time for table ActivityLaps
INFO:utilities.db_object:Found primary key column activity_id for table ActivityRecords
INFO:utilities.db_object:Found primary key column record for table ActivityRecords
INFO:utilities.db_object:Found time_col_name timestamp for table ActivityRecords
INFO:utilities.db_object:Found primary key column activity_id for table StepsActivities
INFO:utilities.db_object:Found time_col_name avg_pace for table StepsActivities
INFO:GarminDB.activities_db:Creating activity view steps_activities_view if needed.
INFO:utilities.db_object:Created join view steps_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.type AS type, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view walking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "walking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view running_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , ROUND(steps_activities.avg_vertical_ratio, 1) AS avg_vertical_ratio , steps_activities.avg_gct_balance AS avg_gct_balance, ROUND(steps_activities.avg_vertical_oscillation, 1) AS avg_vertical_oscillation , steps_activities.avg_ground_contact_time AS avg_ground_contact_time, steps_activities.avg_stance_time_percent AS avg_stance_time_percent, steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "running" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view hiking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "hiking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table PaddleActivities
INFO:GarminDB.activities_db:Creating activity view paddle_activities_view if needed.
INFO:utilities.db_object:Created join view paddle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , paddle_activities.strokes AS strokes, ROUND(paddle_activities.avg_stroke_distance, 1) AS avg_stroke_distance , activities.avg_cadence AS avg_cadence, activities.max_cadence AS max_cadence, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM paddle_activities JOIN activities ON activities.activity_id = paddle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table CycleActivities
INFO:GarminDB.activities_db:Creating activity view cycle_activities_view if needed.
INFO:utilities.db_object:Created join view cycle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , cycle_activities.strokes AS strokes, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , activities.avg_cadence AS avg_rpms, activities.max_cadence AS max_rpms, ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , cycle_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM cycle_activities JOIN activities ON activities.activity_id = cycle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table EllipticalActivities
INFO:GarminDB.activities_db:Creating activity view elliptical_activities_view if needed.
INFO:utilities.db_object:Created join view elliptical_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, elliptical_activities.steps AS steps, ROUND(activities.distance, 1) AS distance , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_cadence, 1) AS avg_rpms , ROUND(activities.max_cadence, 1) AS max_rpms , ROUND(activities.avg_speed, 1) AS avg_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect 
FROM elliptical_activities JOIN activities ON activities.activity_id = elliptical_activities.activity_id ORDER BY activities.start_time DESC
INFO:root:Processing 2 json files
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/FitFiles/Activities/activity_5142541235.json
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/FitFiles/Activities/activity_5137726632.json
INFO:root:DB updated with 2 entries from 2 files.
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/import_garmin_activities.pyc:Processing activities detail data
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Activities looking for files matching activity_details_\d*\.json and created after 2020-06-25 11:40:02.573169
INFO:root:Found 2 json files for activity_details_\d*\.json in /Users/amrit/HealthData/FitFiles/Activities
INFO:utilities.db:ActivitiesDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:GarminDB.activities_db:Creating activity view steps_activities_view if needed.
INFO:utilities.db_object:Created join view steps_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.type AS type, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view walking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "walking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view running_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , ROUND(steps_activities.avg_vertical_ratio, 1) AS avg_vertical_ratio , steps_activities.avg_gct_balance AS avg_gct_balance, ROUND(steps_activities.avg_vertical_oscillation, 1) AS avg_vertical_oscillation , steps_activities.avg_ground_contact_time AS avg_ground_contact_time, steps_activities.avg_stance_time_percent AS avg_stance_time_percent, steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "running" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view hiking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "hiking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table PaddleActivities
INFO:GarminDB.activities_db:Creating activity view paddle_activities_view if needed.
INFO:utilities.db_object:Created join view paddle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , paddle_activities.strokes AS strokes, ROUND(paddle_activities.avg_stroke_distance, 1) AS avg_stroke_distance , activities.avg_cadence AS avg_cadence, activities.max_cadence AS max_cadence, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM paddle_activities JOIN activities ON activities.activity_id = paddle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table CycleActivities
INFO:GarminDB.activities_db:Creating activity view cycle_activities_view if needed.
INFO:utilities.db_object:Created join view cycle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , cycle_activities.strokes AS strokes, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , activities.avg_cadence AS avg_rpms, activities.max_cadence AS max_rpms, ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , cycle_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM cycle_activities JOIN activities ON activities.activity_id = cycle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table EllipticalActivities
INFO:GarminDB.activities_db:Creating activity view elliptical_activities_view if needed.
INFO:utilities.db_object:Created join view elliptical_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, elliptical_activities.steps AS steps, ROUND(activities.distance, 1) AS distance , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_cadence, 1) AS avg_rpms , ROUND(activities.max_cadence, 1) AS max_rpms , ROUND(activities.avg_speed, 1) AS avg_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect 
FROM elliptical_activities JOIN activities ON activities.activity_id = elliptical_activities.activity_id ORDER BY activities.start_time DESC
INFO:root:Processing 2 json files
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/FitFiles/Activities/activity_details_5137726632.json
INFO:root:DB updated with 1 entries from /Users/amrit/HealthData/FitFiles/Activities/activity_details_5142541235.json
INFO:root:DB updated with 2 entries from 2 files.
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/fit_data.pyc:Processing [<FileType.activity: 4>] FIT data from /Users/amrit/HealthData/FitFiles/Activities
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/utilities/file_processor.pyc:Reading directory: /Users/amrit/HealthData/FitFiles/Activities looking for files matching \w+\.(fit|FIT) and created after 2020-06-25 11:40:02.780722
INFO:root:Debug: 0
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:utilities.db:MonitoringDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:utilities.db:ActivitiesDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:GarminDB.activities_db:Creating activity view steps_activities_view if needed.
INFO:utilities.db_object:Created join view steps_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.type AS type, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view walking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "walking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view running_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , ROUND(steps_activities.avg_vertical_ratio, 1) AS avg_vertical_ratio , steps_activities.avg_gct_balance AS avg_gct_balance, ROUND(steps_activities.avg_vertical_oscillation, 1) AS avg_vertical_oscillation , steps_activities.avg_ground_contact_time AS avg_ground_contact_time, steps_activities.avg_stance_time_percent AS avg_stance_time_percent, steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "running" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view hiking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "hiking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table PaddleActivities
INFO:GarminDB.activities_db:Creating activity view paddle_activities_view if needed.
INFO:utilities.db_object:Created join view paddle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , paddle_activities.strokes AS strokes, ROUND(paddle_activities.avg_stroke_distance, 1) AS avg_stroke_distance , activities.avg_cadence AS avg_cadence, activities.max_cadence AS max_cadence, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM paddle_activities JOIN activities ON activities.activity_id = paddle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table CycleActivities
INFO:GarminDB.activities_db:Creating activity view cycle_activities_view if needed.
INFO:utilities.db_object:Created join view cycle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , cycle_activities.strokes AS strokes, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , activities.avg_cadence AS avg_rpms, activities.max_cadence AS max_rpms, ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , cycle_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM cycle_activities JOIN activities ON activities.activity_id = cycle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table EllipticalActivities
INFO:GarminDB.activities_db:Creating activity view elliptical_activities_view if needed.
INFO:utilities.db_object:Created join view elliptical_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, elliptical_activities.steps AS steps, ROUND(activities.distance, 1) AS distance , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_cadence, 1) AS avg_rpms , ROUND(activities.max_cadence, 1) AS max_rpms , ROUND(activities.avg_speed, 1) AS avg_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect 
FROM elliptical_activities JOIN activities ON activities.activity_id = elliptical_activities.activity_id ORDER BY activities.start_time DESC
INFO:Fit.developer_field_definition:DeveloperFieldDefinition(dev_RPI[RPI]: scale None offset None, 1 of FLOAT32) for <MessageType.record: 20> field None
INFO:Fit.developer_field_definition:DeveloperFieldDefinition(dev_RPI[RPI]: scale None offset None, 1 of FLOAT32) for <MessageType.record: 20> field None
INFO:Fit.file:File /Users/amrit/HealthData/FitFiles/Activities/5142541235.fit (FileType.activity): 2020-06-25 17:23:04 (UTC+07:00) -> 2020-06-25 18:00:29
INFO:root:Importing /Users/amrit/HealthData/FitFiles/Activities/5142541235.fit (2020-06-25 17:23:04) [FileType.activity] with message types: [<MessageType.file_id: 0>, <MessageType.file_creator: 49>, <MessageType.event: 21>, <MessageType.device_info: 23>, <MessageType.source: 22>, <MessageType.unknown_141: 141>, <MessageType.device_settings: 2>, <MessageType.user_profile: 3>, <UnknownMessageType.unknown_79: 79>, <MessageType.sport: 12>, <MessageType.unknown_13: 13>, <MessageType.zones_target: 7>, <MessageType.dev_data_id: 207>, <MessageType.field_description: 206>, <MessageType.record: 20>, <MessageType.unknown_233: 233>, <MessageType.battery: 104>, <MessageType.lap: 19>, <UnknownMessageType.unknown_216: 216>, <MessageType.unknown_140: 140>, <MessageType.session: 18>, <MessageType.activity: 34>, <UnknownMessageType.unknown_113: 113>]
INFO:root:steps: {'activity_id': '5142541235', 'steps': 6104.0, 'avg_pace': datetime.time(0, 8, 35, 815452), 'max_pace': datetime.time(0, 7, 37, 459980), 'avg_steps_per_min': 164.0, 'max_steps_per_min': 174.0, 'avg_step_length': None, 'avg_vertical_ratio': None, 'avg_vertical_oscillation': None, 'avg_gct_balance': None, 'avg_ground_contact_time': None, 'avg_stance_time_percent': None}
INFO:root:Wrote Fit file /Users/amrit/HealthData/FitFiles/Activities/5142541235.fit type FileType.activity to the database
INFO:Fit.file:File /Users/amrit/HealthData/FitFiles/Activities/5137726632.fit (FileType.activity): 2020-06-24 18:29:03 (UTC+07:00) -> 2020-06-24 19:07:23
INFO:root:Importing /Users/amrit/HealthData/FitFiles/Activities/5137726632.fit (2020-06-24 18:29:03) [FileType.activity] with message types: [<MessageType.file_id: 0>, <MessageType.file_creator: 49>, <MessageType.event: 21>, <MessageType.device_info: 23>, <MessageType.source: 22>, <MessageType.unknown_141: 141>, <MessageType.device_settings: 2>, <MessageType.user_profile: 3>, <UnknownMessageType.unknown_79: 79>, <MessageType.sport: 12>, <MessageType.unknown_13: 13>, <MessageType.zones_target: 7>, <MessageType.record: 20>, <MessageType.unknown_233: 233>, <MessageType.battery: 104>, <MessageType.lap: 19>, <UnknownMessageType.unknown_216: 216>, <MessageType.unknown_140: 140>, <MessageType.session: 18>, <MessageType.activity: 34>]
INFO:root:steps: {'activity_id': '5137726632', 'steps': 3166.0, 'avg_pace': datetime.time(0, 27, 8, 890901), 'max_pace': datetime.time(0, 14, 44, 741182), 'avg_steps_per_min': 64.0, 'max_steps_per_min': 224.0, 'avg_step_length': None, 'avg_vertical_ratio': None, 'avg_vertical_oscillation': None, 'avg_gct_balance': None, 'avg_ground_contact_time': None, 'avg_stance_time_percent': None}
INFO:root:Wrote Fit file /Users/amrit/HealthData/FitFiles/Activities/5137726632.fit type FileType.activity to the database
INFO:garmin.py:___Analyzing Data___
INFO:utilities.db:GarminDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:utilities.db_object:Created join view device_info_view using query SELECT device_info.timestamp AS timestamp, device_info.file_id AS file_id, device_info.serial_number AS serial_number, devices.device_type AS device_type, device_info.software_version AS software_version, devices.manufacturer AS manufacturer, devices.product AS product, devices.hardware_version AS hardware_version, device_info.battery_status AS battery_status 
FROM device_info JOIN devices ON devices.serial_number = device_info.serial_number ORDER BY device_info.timestamp DESC
INFO:utilities.db_object:Found primary key column id for table File
INFO:utilities.db_object:Created join view files_view using query SELECT device_info.timestamp AS timestamp, files.id AS activity_id, files.name AS name, files.type AS type, devices.manufacturer AS manufacturer, devices.product AS product, devices.serial_number AS serial_number 
FROM files JOIN devices ON files.serial_number = devices.serial_number JOIN device_info ON files.id = device_info.file_id ORDER BY device_info.timestamp DESC
INFO:utilities.db:MonitoringDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:utilities.db:GarminSummaryDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:utilities.db_object:Found primary key column key for table Summary
INFO:utilities.db_object:Found time_col_name timestamp for table Summary
INFO:utilities.db_object:Found primary key column first_day for table YearsSummary
INFO:utilities.db_object:Found primary key time_col_name first_day for table YearsSummary
INFO:utilities.db_object:Created join view years_summary_view using query SELECT years_summary.first_day AS first_day, ROUND(years_summary.rhr_avg, 1) AS rhr , ROUND(years_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(years_summary.weight_avg, 1) AS weight , years_summary.intensity_time AS intensity_time, years_summary.moderate_activity_time AS moderate_activity_time, years_summary.vigorous_activity_time AS vigorous_activity_time, years_summary.steps AS total_steps, ROUND(round(steps / 365), 1) AS steps_avg , ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(years_summary.floors, 1) AS total_floors , ROUND(round(floors / 365), 1) AS floors_avg , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , years_summary.sleep_avg AS sleep_avg, years_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(years_summary.stress_avg, 1) AS stress_avg , ROUND(years_summary.calories_avg, 1) AS calories_avg , ROUND(years_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(years_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(years_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(years_summary.calories_goal, 1) AS calories_goal , years_summary.activities AS activities, years_summary.activities_calories AS activities_calories, ROUND(years_summary.activities_distance, 1) AS activities_distance , ROUND(years_summary.hydration_goal, 1) AS hydration_goal , ROUND(years_summary.hydration_avg, 1) AS hydration_avg , ROUND(years_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(years_summary.spo2_avg, 1) AS spo2_avg , ROUND(years_summary.spo2_min, 1) AS spo2_min , ROUND(years_summary.rr_waking_avg, 1) AS rr_waking_avg  
FROM years_summary ORDER BY years_summary.first_day DESC
INFO:utilities.db_object:Found primary key column first_day for table MonthsSummary
INFO:utilities.db_object:Found primary key time_col_name first_day for table MonthsSummary
INFO:utilities.db_object:Created join view months_summary_view using query SELECT months_summary.first_day AS first_day, ROUND(months_summary.rhr_avg, 1) AS rhr , ROUND(months_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(months_summary.weight_avg, 1) AS weight , months_summary.intensity_time AS intensity_time, months_summary.moderate_activity_time AS moderate_activity_time, months_summary.vigorous_activity_time AS vigorous_activity_time, months_summary.steps AS total_steps, ROUND(round(steps / 28), 1) AS steps_avg , ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(months_summary.floors, 1) AS total_floors , ROUND(round(floors / 28), 1) AS floors_avg , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , months_summary.sleep_avg AS sleep_avg, months_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(months_summary.stress_avg, 1) AS stress_avg , ROUND(months_summary.calories_avg, 1) AS calories_avg , ROUND(months_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(months_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(months_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(months_summary.calories_goal, 1) AS calories_goal , months_summary.activities AS activities, months_summary.activities_calories AS activities_calories, ROUND(months_summary.activities_distance, 1) AS activities_distance , ROUND(months_summary.hydration_goal, 1) AS hydration_goal , ROUND(months_summary.hydration_avg, 1) AS hydration_avg , ROUND(months_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(months_summary.spo2_avg, 1) AS spo2_avg , ROUND(months_summary.spo2_min, 1) AS spo2_min , ROUND(months_summary.rr_waking_avg, 1) AS rr_waking_avg  
FROM months_summary ORDER BY months_summary.first_day DESC
INFO:utilities.db_object:Found primary key column first_day for table WeeksSummary
INFO:utilities.db_object:Found primary key time_col_name first_day for table WeeksSummary
INFO:utilities.db_object:Created join view weeks_summary_view using query SELECT weeks_summary.first_day AS first_day, ROUND(weeks_summary.rhr_avg, 1) AS rhr , ROUND(weeks_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(weeks_summary.weight_avg, 1) AS weight , weeks_summary.intensity_time AS intensity_time, weeks_summary.moderate_activity_time AS moderate_activity_time, weeks_summary.vigorous_activity_time AS vigorous_activity_time, weeks_summary.steps AS total_steps, ROUND(round(steps / 7), 1) AS steps_avg , ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(weeks_summary.floors, 1) AS total_floors , ROUND(round(floors / 7), 1) AS floors_avg , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , weeks_summary.sleep_avg AS sleep_avg, weeks_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(weeks_summary.stress_avg, 1) AS stress_avg , ROUND(weeks_summary.calories_avg, 1) AS calories_avg , ROUND(weeks_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(weeks_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(weeks_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(weeks_summary.calories_goal, 1) AS calories_goal , weeks_summary.activities AS activities, weeks_summary.activities_calories AS activities_calories, ROUND(weeks_summary.activities_distance, 1) AS activities_distance , ROUND(weeks_summary.hydration_goal, 1) AS hydration_goal , ROUND(weeks_summary.hydration_avg, 1) AS hydration_avg , ROUND(weeks_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(weeks_summary.spo2_avg, 1) AS spo2_avg , ROUND(weeks_summary.spo2_min, 1) AS spo2_min , ROUND(weeks_summary.rr_waking_avg, 1) AS rr_waking_avg  
FROM weeks_summary ORDER BY weeks_summary.first_day DESC
INFO:utilities.db_object:Found primary key column day for table DaysSummary
INFO:utilities.db_object:Found primary key time_col_name day for table DaysSummary
INFO:utilities.db_object:Created join view days_summary_view using query SELECT days_summary.day AS day, ROUND(days_summary.hr_avg, 1) AS hr_avg , ROUND(days_summary.hr_min, 1) AS hr_min , ROUND(days_summary.hr_max, 1) AS hr_max , ROUND(days_summary.rhr_avg, 1) AS rhr , ROUND(days_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(days_summary.weight_avg, 1) AS weight , days_summary.intensity_time AS intensity_time, days_summary.moderate_activity_time AS moderate_activity_time, days_summary.vigorous_activity_time AS vigorous_activity_time, days_summary.steps AS steps, ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(days_summary.floors, 1) AS floors , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , days_summary.sleep_avg AS sleep_avg, days_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(days_summary.stress_avg, 1) AS stress_avg , ROUND(days_summary.calories_avg, 1) AS calories_avg , ROUND(days_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(days_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(days_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(days_summary.calories_goal, 1) AS calories_goal , days_summary.activities AS activities, days_summary.activities_calories AS activities_calories, ROUND(days_summary.activities_distance, 1) AS activities_distance , ROUND(days_summary.hydration_goal, 1) AS hydration_goal , ROUND(days_summary.hydration_avg, 1) AS hydration_avg , ROUND(days_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(days_summary.spo2_avg, 1) AS spo2_avg , ROUND(days_summary.spo2_min, 1) AS spo2_min , ROUND(days_summary.rr_waking_avg, 1) AS rr_waking_avg , ROUND(days_summary.rr_max, 1) AS rr_max , ROUND(days_summary.rr_min, 1) AS rr_min  
FROM days_summary ORDER BY days_summary.day DESC
INFO:utilities.db_object:Found primary key column timestamp for table IntensityHR
INFO:utilities.db_object:Found primary key time_col_name timestamp for table IntensityHR
INFO:utilities.db:SummaryDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:utilities.db_object:Found primary key column key for table Summary
INFO:utilities.db_object:Found time_col_name timestamp for table Summary
INFO:utilities.db_object:Found primary key column first_day for table YearsSummary
INFO:utilities.db_object:Found primary key time_col_name first_day for table YearsSummary
INFO:utilities.db_object:Created join view years_summary_view using query SELECT years_summary.first_day AS first_day, ROUND(years_summary.rhr_avg, 1) AS rhr , ROUND(years_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(years_summary.weight_avg, 1) AS weight , years_summary.intensity_time AS intensity_time, years_summary.moderate_activity_time AS moderate_activity_time, years_summary.vigorous_activity_time AS vigorous_activity_time, years_summary.steps AS total_steps, ROUND(round(steps / 365), 1) AS steps_avg , ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(years_summary.floors, 1) AS total_floors , ROUND(round(floors / 365), 1) AS floors_avg , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , years_summary.sleep_avg AS sleep_avg, years_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(years_summary.stress_avg, 1) AS stress_avg , ROUND(years_summary.calories_avg, 1) AS calories_avg , ROUND(years_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(years_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(years_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(years_summary.calories_goal, 1) AS calories_goal , years_summary.activities AS activities, years_summary.activities_calories AS activities_calories, ROUND(years_summary.activities_distance, 1) AS activities_distance , ROUND(years_summary.hydration_goal, 1) AS hydration_goal , ROUND(years_summary.hydration_avg, 1) AS hydration_avg , ROUND(years_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(years_summary.spo2_avg, 1) AS spo2_avg , ROUND(years_summary.spo2_min, 1) AS spo2_min , ROUND(years_summary.rr_waking_avg, 1) AS rr_waking_avg  
FROM years_summary ORDER BY years_summary.first_day DESC
INFO:utilities.db_object:Found primary key column first_day for table MonthsSummary
INFO:utilities.db_object:Found primary key time_col_name first_day for table MonthsSummary
INFO:utilities.db_object:Created join view months_summary_view using query SELECT months_summary.first_day AS first_day, ROUND(months_summary.rhr_avg, 1) AS rhr , ROUND(months_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(months_summary.weight_avg, 1) AS weight , months_summary.intensity_time AS intensity_time, months_summary.moderate_activity_time AS moderate_activity_time, months_summary.vigorous_activity_time AS vigorous_activity_time, months_summary.steps AS total_steps, ROUND(round(steps / 28), 1) AS steps_avg , ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(months_summary.floors, 1) AS total_floors , ROUND(round(floors / 28), 1) AS floors_avg , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , months_summary.sleep_avg AS sleep_avg, months_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(months_summary.stress_avg, 1) AS stress_avg , ROUND(months_summary.calories_avg, 1) AS calories_avg , ROUND(months_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(months_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(months_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(months_summary.calories_goal, 1) AS calories_goal , months_summary.activities AS activities, months_summary.activities_calories AS activities_calories, ROUND(months_summary.activities_distance, 1) AS activities_distance , ROUND(months_summary.hydration_goal, 1) AS hydration_goal , ROUND(months_summary.hydration_avg, 1) AS hydration_avg , ROUND(months_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(months_summary.spo2_avg, 1) AS spo2_avg , ROUND(months_summary.spo2_min, 1) AS spo2_min , ROUND(months_summary.rr_waking_avg, 1) AS rr_waking_avg  
FROM months_summary ORDER BY months_summary.first_day DESC
INFO:utilities.db_object:Found primary key column first_day for table WeeksSummary
INFO:utilities.db_object:Found primary key time_col_name first_day for table WeeksSummary
INFO:utilities.db_object:Created join view weeks_summary_view using query SELECT weeks_summary.first_day AS first_day, ROUND(weeks_summary.rhr_avg, 1) AS rhr , ROUND(weeks_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(weeks_summary.weight_avg, 1) AS weight , weeks_summary.intensity_time AS intensity_time, weeks_summary.moderate_activity_time AS moderate_activity_time, weeks_summary.vigorous_activity_time AS vigorous_activity_time, weeks_summary.steps AS total_steps, ROUND(round(steps / 7), 1) AS steps_avg , ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(weeks_summary.floors, 1) AS total_floors , ROUND(round(floors / 7), 1) AS floors_avg , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , weeks_summary.sleep_avg AS sleep_avg, weeks_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(weeks_summary.stress_avg, 1) AS stress_avg , ROUND(weeks_summary.calories_avg, 1) AS calories_avg , ROUND(weeks_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(weeks_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(weeks_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(weeks_summary.calories_goal, 1) AS calories_goal , weeks_summary.activities AS activities, weeks_summary.activities_calories AS activities_calories, ROUND(weeks_summary.activities_distance, 1) AS activities_distance , ROUND(weeks_summary.hydration_goal, 1) AS hydration_goal , ROUND(weeks_summary.hydration_avg, 1) AS hydration_avg , ROUND(weeks_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(weeks_summary.spo2_avg, 1) AS spo2_avg , ROUND(weeks_summary.spo2_min, 1) AS spo2_min , ROUND(weeks_summary.rr_waking_avg, 1) AS rr_waking_avg  
FROM weeks_summary ORDER BY weeks_summary.first_day DESC
INFO:utilities.db_object:Found primary key column day for table DaysSummary
INFO:utilities.db_object:Found primary key time_col_name day for table DaysSummary
INFO:utilities.db_object:Created join view days_summary_view using query SELECT days_summary.day AS day, ROUND(days_summary.hr_avg, 1) AS hr_avg , ROUND(days_summary.hr_min, 1) AS hr_min , ROUND(days_summary.hr_max, 1) AS hr_max , ROUND(days_summary.rhr_avg, 1) AS rhr , ROUND(days_summary.inactive_hr_avg, 1) AS inactive_hr , ROUND(days_summary.weight_avg, 1) AS weight , days_summary.intensity_time AS intensity_time, days_summary.moderate_activity_time AS moderate_activity_time, days_summary.vigorous_activity_time AS vigorous_activity_time, days_summary.steps AS steps, ROUND(round((steps * 100) / steps_goal), 1) AS steps_goal_percent , ROUND(days_summary.floors, 1) AS floors , ROUND(round((floors * 100) / floors_goal), 1) AS floors_goal_percent , days_summary.sleep_avg AS sleep_avg, days_summary.rem_sleep_avg AS rem_sleep_avg, ROUND(days_summary.stress_avg, 1) AS stress_avg , ROUND(days_summary.calories_avg, 1) AS calories_avg , ROUND(days_summary.calories_bmr_avg, 1) AS calories_bmr_avg , ROUND(days_summary.calories_active_avg, 1) AS calories_active_avg , ROUND(days_summary.calories_consumed_avg, 1) AS calories_consumed_avg , ROUND(days_summary.calories_goal, 1) AS calories_goal , days_summary.activities AS activities, days_summary.activities_calories AS activities_calories, ROUND(days_summary.activities_distance, 1) AS activities_distance , ROUND(days_summary.hydration_goal, 1) AS hydration_goal , ROUND(days_summary.hydration_avg, 1) AS hydration_avg , ROUND(days_summary.sweat_loss_avg, 1) AS sweat_loss_avg , ROUND(days_summary.spo2_avg, 1) AS spo2_avg , ROUND(days_summary.spo2_min, 1) AS spo2_min , ROUND(days_summary.rr_waking_avg, 1) AS rr_waking_avg , ROUND(days_summary.rr_max, 1) AS rr_max , ROUND(days_summary.rr_min, 1) AS rr_min  
FROM days_summary ORDER BY days_summary.day DESC
INFO:utilities.db:ActivitiesDB: <DbParams() {'db_type': 'sqlite', 'db_path': '/Users/amrit/HealthData/DBs'} debug: -1 
INFO:GarminDB.activities_db:Creating activity view steps_activities_view if needed.
INFO:utilities.db_object:Created join view steps_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.type AS type, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view walking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "walking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view running_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.course_id AS course_id, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , ROUND(steps_activities.avg_vertical_ratio, 1) AS avg_vertical_ratio , steps_activities.avg_gct_balance AS avg_gct_balance, ROUND(steps_activities.avg_vertical_oscillation, 1) AS avg_vertical_oscillation , steps_activities.avg_ground_contact_time AS avg_ground_contact_time, steps_activities.avg_stance_time_percent AS avg_stance_time_percent, steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "running" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Created join view hiking_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , steps_activities.steps AS steps, steps_activities.avg_pace AS avg_pace, steps_activities.avg_moving_pace AS avg_moving_pace, steps_activities.max_pace AS max_pace, ROUND(steps_activities.avg_steps_per_min, 1) AS avg_steps_per_min , ROUND(steps_activities.max_steps_per_min, 1) AS max_steps_per_min , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , ROUND(steps_activities.avg_step_length, 1) AS avg_step_length , steps_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM steps_activities JOIN activities ON activities.activity_id = steps_activities.activity_id 
WHERE Activities.sport == "hiking" ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table PaddleActivities
INFO:GarminDB.activities_db:Creating activity view paddle_activities_view if needed.
INFO:utilities.db_object:Created join view paddle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sport AS sport, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , paddle_activities.strokes AS strokes, ROUND(paddle_activities.avg_stroke_distance, 1) AS avg_stroke_distance , activities.avg_cadence AS avg_cadence, activities.max_cadence AS max_cadence, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM paddle_activities JOIN activities ON activities.activity_id = paddle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table CycleActivities
INFO:GarminDB.activities_db:Creating activity view cycle_activities_view if needed.
INFO:utilities.db_object:Created join view cycle_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.sub_sport AS sub_sport, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, ROUND(activities.distance, 1) AS distance , cycle_activities.strokes AS strokes, activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_temperature, 1) AS avg_temperature , activities.avg_cadence AS avg_rpms, activities.max_cadence AS max_rpms, ROUND(activities.avg_speed, 1) AS avg_speed , ROUND(activities.max_speed, 1) AS max_speed , cycle_activities.vo2_max AS vo2_max, activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect, "http://maps.google.com/?ie=UTF8&q=" || activities.start_lat || "," || activities.start_long || "&z=13" AS start_loc, "http://maps.google.com/?ie=UTF8&q=" || activities.stop_lat || "," || activities.stop_long || "&z=13" AS stop_loc 
FROM cycle_activities JOIN activities ON activities.activity_id = cycle_activities.activity_id ORDER BY activities.start_time DESC
INFO:utilities.db_object:Found primary key column activity_id for table EllipticalActivities
INFO:GarminDB.activities_db:Creating activity view elliptical_activities_view if needed.
INFO:utilities.db_object:Created join view elliptical_activities_view using query SELECT activities.activity_id AS activity_id, activities.name AS name, activities.description AS description, activities.start_time AS start_time, activities.stop_time AS stop_time, activities.elapsed_time AS elapsed_time, elliptical_activities.steps AS steps, ROUND(activities.distance, 1) AS distance , activities.avg_hr AS avg_hr, activities.max_hr AS max_hr, activities.avg_rr AS avg_rr, activities.max_rr AS max_rr, activities.calories AS calories, ROUND(activities.avg_cadence, 1) AS avg_rpms , ROUND(activities.max_cadence, 1) AS max_rpms , ROUND(activities.avg_speed, 1) AS avg_speed , activities.training_effect AS training_effect, activities.anaerobic_training_effect AS anaerobic_training_effect 
FROM elliptical_activities JOIN activities ON activities.activity_id = elliptical_activities.activity_id ORDER BY activities.start_time DESC
INFO:stats:File records: 767
INFO:stats:fit_activity files: 465
INFO:stats:tcx files: 302
INFO:stats:___Activities Statistics___
INFO:stats:Total activities: 767
INFO:stats:Activities lap records: 4473
INFO:stats:Activity records: 602528
INFO:stats:Years with activities: 12: [2012, 2010, 2011, 2013, 2009, 2014, 2015, 2016, 2017, 2018, 2020, 2019]
INFO:stats:Fitness activities: 120
INFO:stats:Recreation activities: 21
INFO:stats:Sports: running, hiking, walking, Other, paddling, rowing, cycling, swimming, alpine_skiing, fitness_equipment, boating, training, generic
INFO:stats:SubSports: generic, street, trail, casual_walking, treadmill, open_water, indoor_cycling, lap_swimming, stair_climbing, track, strength_training, cardio_training, track_me
INFO:stats:Generic activities: 3 - total distance 31 miles average distance 10 miles
INFO:stats:Running activities: 587 - total distance 3054 miles average distance 5 miles
INFO:stats:Cycling activities: 100 - total distance 314 miles average distance 3 miles
INFO:stats:Fitness Equipment activities: 5 - total distance 0 miles average distance 0 miles
INFO:stats:Swimming activities: 16 - total distance 4 miles average distance 0 miles
INFO:stats:Training activities: 11 - total distance 0 miles average distance 0 miles
INFO:stats:Walking activities: 22 - total distance 29 miles average distance 1 miles
INFO:stats:Alpine Skiing activities: 1 - total distance 0 miles average distance 0 miles
INFO:stats:Rowing activities: 1 - total distance 6 miles average distance 6 miles
INFO:stats:Hiking activities: 16 - total distance 80 miles average distance 5 miles
INFO:stats:Paddling activities: 1 - total distance 0 miles average distance 0 miles
INFO:stats:Boating activities: 3 - total distance 20 miles average distance 6 miles
INFO:stats:___Monitoring Statistics___
INFO:stats:Weight records: 0 max: None min: None avg: None latest: None
INFO:stats:Stress records: 0 max: None min: None avg: None latest: None
INFO:stats:RHR records: 508 max: 96.0 min: 43.0 avg: 54.98622047244095 latest: 51.0
INFO:stats:Sleep records: 542 max: 12:19:00 min: 01:19:00 avg: 08:33:36 latest: 10:38:00
INFO:stats:REM Sleep records: 542 max: 04:35:00 min: 00:15:00 avg: 02:17:03 latest: 03:44:00
INFO:stats:___Monitoring Records Coverage___
INFO:stats:This shows periods that data has been downloaded for. Not seeing data for days you know Garmin has data? Change the starting day and the number of days in GarminConnectConfig.json and do a full download.
INFO:stats:Monitoring records: 0
INFO:stats:Monitoring Years with data (0): []
INFO:stats:Total days with monitoring data: 0
INFO:/var/folders/gw/8lp9rgk93tlbqxqh7j3rt67w0000gp/T/_MEINpi1MW/analyze_garmin.pyc:Summary Tables Generation:
