View(dataPB)
# Update Garmin activity database
#system("/Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
View(dataPB)
# Update Garmin activity database
#system("/Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
dataHuaHin <- bind_rows(dataPB, dataHH)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76
)
#####################
dataHuaHin <- addHI(dataHuaHin, humidity)
plotViolation(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotViolationSumm(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotRPI(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
# Update Garmin activity database
system("/Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
dataHuaHin <- bind_rows(dataPB, dataHH)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76
)
#####################
dataHuaHin <- addHI(dataHuaHin, humidity)
plotViolation(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotViolationSumm(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotRPI(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
# Update Garmin activity database
system("/Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
dataHuaHin <- bind_rows(dataPB, dataHH)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76,
"2020-06-21", 70
)
#####################
dataHuaHin <- addHI(dataHuaHin, humidity)
plotViolation(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotViolationSumm(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotRPI(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
# Update Garmin activity database
system("cp /Applications/GarminDb_Darwin_1.6.0/GarminConnectConfig.json . && /Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
dataHuaHin <- bind_rows(dataPB, dataHH)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76,
"2020-06-21", 70
)
#####################
dataHuaHin <- addHI(dataHuaHin, humidity)
plotViolation(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotViolationSumm(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotRPI(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
devtools::install_github("djnavarro/asciify")
install.packages("prettyunits")
devtools::install_github("djnavarro/asciify")
install.packages("imager")
devtools::install_github("djnavarro/asciify")
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("weatherData")
install.packages('weatherData')
install_github("Ram-N/weatherData")
devtools::install_github("Ram-N/weatherData")
knitr::opts_chunk$set(echo = F, message = F, warning = F, fig.align = "center")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
getStationCode("Calcutta")
library(weatherData)
getStationCode("Calcutta")
getStationCode("Hua Hin")
getStationCode("Pran Buri")
getStationCode("Pran Buri")
# Find out which column has the humidity data
showAvailableColumns("VTPH", "2020-06-25", opt_detailed=T)
# Find out which column has the humidity data
showAvailableColumns("VTPH", "2020-06-20", opt_detailed=T)
# Find out which column has the humidity data
showAvailableColumns("VOCI", "2020-06-20", opt_detailed=T)
# Find out which column has the humidity data
showAvailableColumns("VOCI", "2020-06-20", opt_detailed=F)
showAvailableColumns("CDG", "2013-12-12", opt_detailed=T)
library(weatherData)
getCurrentTemperature("PIT")
getStationCode("Buffalo")
install.packages("rwunderground")
install.packages("owmr")
library(owmr)
owmr_settings("93f4fb302086f3857880a8b89c33e9fe")
Sys.setenv(OWM_API_KEY = "93f4fb302086f3857880a8b89c33e9fe")
(res <- get_current("London", units = "metric") %>%
owmr_as_tibble()) %>% names()
library(owmr)
(res <- get_current("London", units = "metric") %>%
owmr_as_tibble()) %>% names()
(res <- get_current("London", units = "metric") %>%
owmr_as_tibble())
(rio <- search_city_list("Rio de Janeiro")) %>%
as.list()
get_current(rio$id, units = "metric") %>%
owmr_as_tibble() %>% .[, 1:6]
res <- find_cities_by_geo_point(
lat = rio$lat,
lon = rio$lon,
cnt = 5,
units = "metric"
) %>% owmr_as_tibble()
idx <- c(names(res[1:6]), "name")
res[, idx]
library(DBI)
library(RSQLite)
con <- dbConnect(SQLite(), "/Users/amrit/HealthData/DBs/garmin_activities.db")
# Get table
runningActs <- dbReadTable(con, 'running_activities_view')
runningActs
library(owmr)
library(DBI)
library(RSQLite)
con <- dbConnect(SQLite(), "/Users/amrit/HealthData/DBs/garmin_activities.db")
# Get table
runningActs <- dbReadTable(con, 'running_activities_view')
runningActs
res <- find_cities_by_geo_point(
lat = "12.4610291887075",
lon = "99.9740870855749",
cnt = 5,
units = "metric"
) %>% owmr_as_tibble()
idx <- c(names(res[1:6]), "name")
res[, idx]
# Update Garmin activity database
# system("cp /Applications/GarminDb_Darwin_1.6.0/GarminConnectConfig.json . && /Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
dataHuaHin <- bind_rows(dataPB, dataHH)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76,
"2020-06-21", 70,
"2020-06-25", 68
)
#####################
dataHuaHin <- addHI(dataHuaHin, humidity)
plotViolation(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotViolationSumm(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotRPI(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
# Update Garmin activity database
# system("cp /Applications/GarminDb_Darwin_1.6.0/GarminConnectConfig.json . && /Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
dataHuaHin <- bind_rows(dataPB, dataHH)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76,
"2020-06-21", 70,
"2020-06-25", 68
)
#####################
dataHuaHin <- addHI(dataHuaHin, humidity)
plotViolation(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotViolationSumm(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
plotRPI(dataHuaHin, titleText = "Hua Hin Running late Spring 2020 runs.")
blogdown:::serve_site()
blogdown:::insert_image_addin()
knitr::opts_chunk$set(echo = F, message = F, warning = F, fig.align = "center")
# Update Garmin activity database
# system("cp /Applications/GarminDb_Darwin_1.6.0/GarminConnectConfig.json . && /Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
# BKK/Lumphini Park Running
dataLP <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pathum Wan")
cleanup()
# BKK/Benchasiri Park
dataBS <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Khlong Toei")
dataBS <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Khlong")
cleanup()
dataBS <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Khlong")
# Update Garmin activity database
# system("cp /Applications/GarminDb_Darwin_1.6.0/GarminConnectConfig.json . && /Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
# BKK/Lumphini Park Running
dataLP <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pathum Wan")
cleanup()
# BKK/Benchasiri Park
# dataBS <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Khlong")
# cleanup()
dataThailand <- bind_rows(dataPB, dataHH, dataLP, dataBS)
# Update Garmin activity database
# system("cp /Applications/GarminDb_Darwin_1.6.0/GarminConnectConfig.json . && /Applications/GarminDb_Darwin_1.6.0/download_update_dbs.sh")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
# BKK/Lumphini Park Running
dataLP <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pathum Wan")
cleanup()
# BKK/Benchasiri Park
# dataBS <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Khlong")
# cleanup()
dataThailand <- bind_rows(dataPB, dataHH, dataLP) #, dataBS)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76,
"2020-06-21", 70,
"2020-06-25", 68,
"2020-06-30", 66,
"2020-07-01", 57,
"2020-07-03", 64,
"2020-07-06", 50
)
#####################
dataThailand <- addHI(dataThailand, humidity)
plotViolation(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotViolationSumm(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotRPI(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
plotViolation(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotViolationSumm(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotRPI(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
plotViolation(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotViolationSumm(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotRPI(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
plotViolation(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotViolationSumm(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
plotRPI(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
dataBS <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Khlong")
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(echo = F, message = F, warning = F, fig.align = "center")
load("~/GitHub/myBlog/content/resources/2020-07-11-final-heat/vadhanaRuns.Rdata")
bkkSummer20
load("~/GitHub/myBlog/content/resources/2020-07-11-final-heat/vadhanaRuns.Rdata")
View(plotBKKSumm20)
View(dataPB)
View(dataThailand)
source("~/GitHub/myBlog/content/resources/2020-06-14-heat-training-continues-in-hua-hin/RPIandHeatLimitedPacePlots.R")
# Pran Buri Running
dataPB <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pran Buri")
cleanup()
# Fix run split over 2 different dates.
dataPB$Date <- as.character(dataPB$Date)
dataPB <- dataPB %>% mutate(Date = ifelse(Date == "2020-06-17", "2020-06-18", Date))
dataPB$Date <- as.Date(dataPB$Date)
# Hua Hin Running
dataHH <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Hua Hin")
cleanup()
# BKK/Lumphini Park Running
dataLP <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Pathum Wan")
cleanup()
# BKK/Benchasiri Park
# dataBS <- getRPIandHLPfromFIT(wd = "~/HealthData/FitFiles/working/", aname = "Khlong")
# cleanup()
dataThailand <- bind_rows(dataPB, dataHH, dataLP) #, dataBS)
########### OPTIONAL USER INPUT FOR HEAT INDEX FACET
humidity  <-
tribble(
~Date,	~humidity,
"2020-06-09", 79,
"2020-06-13", 62,
"2020-06-17", 76,
"2020-06-18", 76,
"2020-06-21", 70,
"2020-06-25", 68,
"2020-06-30", 66,
"2020-07-01", 57,
"2020-07-03", 64,
"2020-07-06", 50
)
#####################
dataThailand <- addHI(dataThailand, humidity)
# plotViolation(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
p <- plotViolationSumm(dataThailand, titleText = "Thailand Summer 2020 heat training runs.")
p$data
View(plotBKKSumm20)
plotBKKSumm20 %>%
mutate(name = "Vadhana") %>%
select(name, Date, RPI, Violation) %>%
bind_rows(p$data %>% select(name, Date, RPI, Violation))
combined <-
plotBKKSumm20 %>%
mutate(name = "Vadhana") %>%
select(name, Date, RPI, Violation) %>%
bind_rows(p$data %>% select(name, Date, RPI, Violation))
ggplot(combined, aes(Date, RPI, color = Violation)) +
geom_point() +
theme(legend.position="bottom") +
# gghighlight(Violation == TRUE,
#             calculate_per_facet = T,
#             use_direct_label = F
# ) +
geom_label_repel(aes(label = name),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50'
) +
labs(title = titleText,
# subtitle = "Red points indicate when average pace faster than heat limited pace",
x = "Date",
y = "Running Performance Index"
) +
scale_color_brewer(palette="Paired")
library(ggrepel)
ggplot(combined, aes(Date, RPI, color = Violation)) +
geom_point() +
theme(legend.position="bottom") +
# gghighlight(Violation == TRUE,
#             calculate_per_facet = T,
#             use_direct_label = F
# ) +
geom_label_repel(aes(label = name),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50'
) +
labs(title = titleText,
# subtitle = "Red points indicate when average pace faster than heat limited pace",
x = "Date",
y = "Running Performance Index"
) +
scale_color_brewer(palette="Paired")
ggplot(combined, aes(Date, RPI, color = Violation)) +
geom_point() +
theme(legend.position="bottom") +
# gghighlight(Violation == TRUE,
#             calculate_per_facet = T,
#             use_direct_label = F
# ) +
geom_label_repel(aes(label = name),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50'
) +
labs(title = "Thailand Summer 2020 heat training runs.",
# subtitle = "Red points indicate when average pace faster than heat limited pace",
x = "Date",
y = "Running Performance Index"
) +
scale_color_brewer(palette="Paired")
ggplot(combined, aes(Date, RPI, color = Violation)) +
geom_point() +
theme(legend.position="bottom") +
# gghighlight(Violation == TRUE,
#             calculate_per_facet = T,
#             use_direct_label = F
# ) +
geom_text_repel(aes(label = name),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50'
) +
labs(title = "Thailand Summer 2020 heat training runs.",
# subtitle = "Red points indicate when average pace faster than heat limited pace",
x = "Date",
y = "Running Performance Index"
) +
scale_color_brewer(palette="Paired")
ggplot(combined, aes(Date, RPI, color = Violation)) +
geom_point() +
geom_smooth(method = "loess") +
theme(legend.position="bottom") +
# gghighlight(Violation == TRUE,
#             calculate_per_facet = T,
#             use_direct_label = F
# ) +
geom_text_repel(aes(label = name),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50'
) +
labs(title = "Thailand Summer 2020 heat training runs.",
# subtitle = "Red points indicate when average pace faster than heat limited pace",
x = "Date",
y = "Running Performance Index"
) +
scale_color_brewer(palette="Paired")
