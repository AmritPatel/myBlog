'<sup>',
"Goal is min of 10 min. continuous jumping per session",
'</sup>')))
# Plot of jpm data.
q <-
ggplot(jumpData, aes(avg_heart_rate, total_training_effect, color = jpm,
label  = jumps,
label2 = start_time,
label3 = max_heart_rate,
# label4 = total_training_effect,
label4 = jumpingEffect
)
) +
geom_point() +
geom_smooth(method = loess, se = FALSE) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Goal is min of 10 min. continuous jumping per session",
x = "Average heart rate (bpm)",
y = "Total Training Effect",
color = "Jumps per minute")
ggplotly(q) %>%
layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
"Goal is min of 10 min. continuous jumping per session",
'</sup>')))
# Plot of jpm data.
q <-
ggplot(jumpData, aes(avg_heart_rate, total_training_effect, color = jpm,
label  = jumps,
label2 = start_time,
label3 = max_heart_rate,
# label4 = total_training_effect,
label4 = jumpingEffect
)
) +
geom_point() +
geom_smooth(method = loess, se = FALSE) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Goal is min of 10 min. continuous jumping per session",
x = "Average heart rate (bpm)",
y = "Total Training Effect",
color = "Jumps per Min.")
ggplotly(q) %>%
layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
"Goal is min of 10 min. continuous jumping per session",
'</sup>')))
# Plot of avg. HR data over time.
library(plotly)
jumpGroup <- Hmisc::cut2(jumpData$jumps, cuts = c(501))
p <-
ggplot(jumpData, aes(start_time, avg_heart_rate, color = jpm,
label  = jumps,
# label2 = jpm,
label2 = max_heart_rate,
label3 = total_training_effect,
label4 = jumpingEffect
)
) +
geom_point() +
geom_smooth(method = loess, se = FALSE) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Goal is min of 10 min. continuous jumping per session",
x = "Date",
y = "Average heart rate (bpm)",
color = "Jumps per min.")
ggplotly(p) %>%
layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
"Goal is min of 10 min. continuous jumping per session",
'</sup>')))
# Plot of avg. HR data over time.
library(plotly)
jumpGroup <- Hmisc::cut2(jumpData$jumps, cuts = c(501))
p <-
ggplot(jumpData, aes(start_time, avg_heart_rate, color = jpm,
label  = jumps,
# label2 = jpm,
label2 = max_heart_rate,
label3 = total_training_effect,
label4 = jumpingEffect
)
) +
geom_point() +
geom_smooth(method = loess, se = FALSE) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Goal is min of 10 min. continuous jumping per session",
x = "Date",
y = "Average heart rate (bpm)",
color = "Jumps per min.")
ggplotly(p) %>%
layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
"Goal is min of 10 min. continuous jumping per session",
'</sup>')))
# Plot avg HR vs. number of jumps colored by time.
r <-
ggplot(jumpData, aes(jumps, avg_heart_rate, color = start_time#,
# label  = jpm,
# label2 = start_time,
# label3 = max_heart_rate,
# label4 = total_training_effect,
# label5 = jumpingEffect
)
) +
geom_point() +
gghighlight(jumps >= 1000) +
geom_smooth(method = loess, se = FALSE) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Sessions with higher number of jumps highlighted",
x = "Jumps",
y = "Average heart rate (bpm)",
color = "Date")
# Plot of jpm data.
library(gghighlight)
#library(ggrepel)
q <-
ggplot(jumpData, aes(jpm, avg_heart_rate, color = start_time,
# label  = jumps,
# label = start_time,
# label3 = max_heart_rate,
# label4 = total_training_effect
# label5 = jumpingEffect
)
) +
geom_point() +
#geom_smooth(method = lm, se = FALSE) +
#gghighlight(jpm >= 130) +
#geom_text(vjust = 0, nudge_y = 1.0) +
# geom_text_repel(aes(label = as.character(start_time)),
#                  box.padding   = 0.35,
#                  point.padding = 0.5,
#                  segment.color = 'grey50'
# ) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Goal is min of 10 min. continuous jumping per session",
y = "Average heart rate (bpm)",
x = "Jumps per minute",
color = "Date")
q
# ggplotly(q) %>%
# layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
#                                   '<br>',
#                                   '<sup>',
#                                   "Goal is min of 10 min. continuous jumping per session",
#                                   '</sup>')))
# Plot avg HR vs. number of jumps colored by time.
r <-
ggplot(jumpData, aes(jumps, avg_heart_rate, color = start_time#,
# label  = jpm,
# label2 = start_time,
# label3 = max_heart_rate,
# label4 = total_training_effect,
# label5 = jumpingEffect
)
) +
geom_point() +
gghighlight(jumps >= 1000) +
geom_smooth(method = loess, se = FALSE) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Sessions with higher number of jumps highlighted",
x = "Jumps",
y = "Average heart rate (bpm)",
color = "Date")
r
# ggplotly(r) %>%
# layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
#                                   '<br>',
#                                   '<sup>',
#                                   "Sessions with higher number of jumps highlighted",
#                                   '</sup>')))
# Plot avg HR vs. number of jumps colored by time.
r <-
ggplot(jumpData, aes(jumps, avg_heart_rate, color = start_time#,
# label  = jpm,
# label2 = start_time,
# label3 = max_heart_rate,
# label4 = total_training_effect,
# label5 = jumpingEffect
)
) +
geom_point() +
gghighlight(jumps >= 1000) +
geom_smooth(method = loess, se = T) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Sessions with higher number of jumps highlighted",
x = "Jumps",
y = "Average heart rate (bpm)",
color = "Date")
r
# ggplotly(r) %>%
# layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
#                                   '<br>',
#                                   '<sup>',
#                                   "Sessions with higher number of jumps highlighted",
#                                   '</sup>')))
# Plot avg HR vs. number of jumps colored by time.
r <-
ggplot(jumpData, aes(jumps, avg_heart_rate, color = start_time#,
# label  = jpm,
# label2 = start_time,
# label3 = max_heart_rate,
# label4 = total_training_effect,
# label5 = jumpingEffect
)
) +
geom_point() +
gghighlight(jumps >= 1000) +
geom_smooth(method = loess, se = F) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Sessions with higher number of jumps highlighted",
x = "Jumps",
y = "Average heart rate (bpm)",
color = "Date")
r
# ggplotly(r) %>%
# layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
#                                   '<br>',
#                                   '<sup>',
#                                   "Sessions with higher number of jumps highlighted",
#                                   '</sup>')))
# Plot avg HR vs. number of jumps colored by time.
r <-
ggplot(jumpData, aes(jumps, avg_heart_rate, color = start_time#,
# label  = jpm,
# label2 = start_time,
# label3 = max_heart_rate,
# label4 = total_training_effect,
# label5 = jumpingEffect
)
) +
geom_point() +
gghighlight(jumps >= 1000) +
#geom_smooth(method = loess, se = F) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Sessions with higher number of jumps highlighted",
x = "Jumps",
y = "Average heart rate (bpm)",
color = "Date")
r
# ggplotly(r) %>%
# layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
#                                   '<br>',
#                                   '<sup>',
#                                   "Sessions with higher number of jumps highlighted",
#                                   '</sup>')))
# Plot of jpm data.
q <-
ggplot(jumpData, aes(avg_heart_rate, total_training_effect, color = jpm,
label  = jumps,
label2 = start_time,
label3 = max_heart_rate,
# label4 = total_training_effect,
label4 = jumpingEffect
)
) +
geom_point() +
geom_smooth(method = loess, se = T) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Goal is min of 10 min. continuous jumping per session",
x = "Average heart rate (bpm)",
y = "Total training effect",
color = "Jumps per min.")
ggplotly(q) %>%
layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
"Goal is min of 10 min. continuous jumping per session",
'</sup>')))
# Plot of jpm data.
q <-
ggplot(jumpData, aes(avg_heart_rate, total_training_effect, color = jpm,
label  = jumps,
label2 = start_time,
label3 = max_heart_rate,
# label4 = total_training_effect,
label4 = jumpingEffect
)
) +
geom_point() +
geom_smooth(method = loess, se = F) +
# geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
subtitle = "Goal is min of 10 min. continuous jumping per session",
x = "Average heart rate (bpm)",
y = "Total training effect",
color = "Jumps per min.")
ggplotly(q) %>%
layout(title = list(text = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
"Goal is min of 10 min. continuous jumping per session",
'</sup>')))
blogdown:::serve_site()
servr::daemon_stop(1)
# Plot avg HR vs. jumping efficiency colored by time.
s <-
ggplot(jumpData, aes(date, jumpingEffect, color = avg_heart_rate,
label  = jpm,
label2 = max_heart_rate,
label3 = total_training_effect)) +
geom_point() +
#gghighlight(jumpingEffect >= 20) +
#geom_smooth(method = lm, se = FALSE) +
#geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
#subtitle = "Jumping effect data >= 20 highlighted",
x = "Jumping Effect",
y = "Average heart rate (bpm)",
color = "Date")
ggplotly(s) %>%
layout(title = list(text = glue("Change in cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
#"Jumping effect data >= 20 highlighted",
'</sup>'))
)
jumpData
# Plot avg HR vs. jumping efficiency colored by time.
s <-
ggplot(jumpData, aes(start_time, jumpingEffect, color = avg_heart_rate,
label  = jpm,
label2 = max_heart_rate,
label3 = total_training_effect)) +
geom_point() +
#gghighlight(jumpingEffect >= 20) +
#geom_smooth(method = lm, se = FALSE) +
#geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
#subtitle = "Jumping effect data >= 20 highlighted",
x = "Jumping Effect",
y = "Average heart rate (bpm)",
color = "Date")
ggplotly(s) %>%
layout(title = list(text = glue("Change in cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
#"Jumping effect data >= 20 highlighted",
'</sup>'))
)
# Plot avg HR vs. jumping efficiency colored by time.
s <-
ggplot(jumpData, aes(jumpingEffect, avg_heart_rate, color = start_time,
label  = jpm,
label2 = max_heart_rate,
label3 = total_training_effect)) +
geom_point() +
#gghighlight(jumpingEffect >= 20) +
#geom_smooth(method = lm, se = FALSE) +
#geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
#subtitle = "Jumping effect data >= 20 highlighted",
x = "Jumping Effect",
y = "Average heart rate (bpm)",
color = "Date")
ggplotly(s) %>%
layout(title = list(text = glue("Change in cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
#"Jumping effect data >= 20 highlighted",
'</sup>'))
)
# Plot avg HR vs. jumping efficiency colored by time.
s <-
ggplot(jumpData, aes(jumpingEffect, total_training_effect, color = start_time,
label  = jpm,
label2 = max_heart_rate,
label3 = total_training_effect)) +
geom_point() +
#gghighlight(jumpingEffect >= 20) +
#geom_smooth(method = lm, se = FALSE) +
#geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
#subtitle = "Jumping effect data >= 20 highlighted",
x = "Jumping Effect",
y = "Average heart rate (bpm)",
color = "Date")
ggplotly(s) %>%
layout(title = list(text = glue("Change in cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
#"Jumping effect data >= 20 highlighted",
'</sup>'))
)
# Plot avg HR vs. jumping efficiency colored by time.
s <-
ggplot(jumpData, aes(jumpingEffect, total_training_effect, color = avg_heart_rate,
label  = jpm,
label2 = max_heart_rate,
label3 = total_training_effect)) +
geom_point() +
#gghighlight(jumpingEffect >= 20) +
#geom_smooth(method = lm, se = FALSE) +
#geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
#subtitle = "Jumping effect data >= 20 highlighted",
x = "Jumping Effect",
y = "Average heart rate (bpm)",
color = "Date")
ggplotly(s) %>%
layout(title = list(text = glue("Change in cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
#"Jumping effect data >= 20 highlighted",
'</sup>'))
)
# Plot avg HR vs. jumping efficiency colored by time.
s <-
ggplot(jumpData, aes(jumpingEffect, total_training_effect, color = avg_heart_rate,
label  = start_time,
label2 = jpm,
label3 = max_heart_rate)) +
# label4 = total_training_effect)) +
geom_point() +
#gghighlight(jumpingEffect >= 20) +
#geom_smooth(method = lm, se = FALSE) +
#geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
#subtitle = "Jumping effect data >= 20 highlighted",
x = "Jumping Effect",
y = "Average heart rate (bpm)",
color = "Date")
ggplotly(s) %>%
layout(title = list(text = glue("Change in cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
#"Jumping effect data >= 20 highlighted",
'</sup>'))
)
# Plot avg HR vs. jumping efficiency colored by time.
s <-
ggplot(jumpData, aes(jumpingEffect, total_training_effect, color = avg_heart_rate,
label  = start_time,
label2 = jpm,
label3 = max_heart_rate)) +
# label4 = total_training_effect)) +
geom_point() +
#gghighlight(jumpingEffect >= 20) +
#geom_smooth(method = lm, se = FALSE) +
#geom_text(vjust = 0, nudge_y = 1.0) +
labs(title = glue("Assessing cardio fitness over time from jumping rope over {length(sessions)} days"),
#subtitle = "Jumping effect data >= 20 highlighted",
x = "Jumping effect",
y = "Total training effect",
color = "Avg. HR")
ggplotly(s) %>%
layout(title = list(text = glue("Change in cardio fitness over time from jumping rope over {length(sessions)} days",
'<br>',
'<sup>',
#"Jumping effect data >= 20 highlighted",
'</sup>'))
)
tribble(
~category,             ~range,
"No benefit",       "0.0-0.9",
"Minor benefit",    "1.0-1.9",
"Maintaining",      "2.0-2.9",
"Improving",        "3.0-3.9",
"Highly improving", "4.0-4.9",
"Overreaching",         "5.0"
) %>%
kable() %>%
kable_styling(full_width = F, position = "center")
tribble(
Category,             ~Range,
"No benefit",       "0.0-0.9",
"Minor benefit",    "1.0-1.9",
"Maintaining",      "2.0-2.9",
"Improving",        "3.0-3.9",
"Highly improving", "4.0-4.9",
"Overreaching",         "5.0"
) %>%
kable() %>%
kable_styling(full_width = F, position = "center")
tribble(
~Category,             ~Range,
"No benefit",       "0.0-0.9",
"Minor benefit",    "1.0-1.9",
"Maintaining",      "2.0-2.9",
"Improving",        "3.0-3.9",
"Highly improving", "4.0-4.9",
"Overreaching",         "5.0"
) %>%
kable() %>%
kable_styling(full_width = F, position = "center")
tribble(
~Category,             ~Range,
"No benefit",       "0.0-0.9",
"Minor benefit",    "1.0-1.9",
"Maintaining",      "2.0-2.9",
"Improving",        "3.0-3.9",
"Highly improving", "4.0-4.9",
"Overreaching",         "5.0"
) %>%
kable() %>%
kable_styling(full_width = F, position = "center")
blogdown:::serve_site()
blogdown:::serve_site()
