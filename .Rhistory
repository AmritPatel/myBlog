rpi %>%
mutate(rpi = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
modRPI <-
rpi %>%
mutate(modRPI = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
modRPI
modRPI <-
rpi %>%
mutate(modRPI = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace -
step$coefficients[[1]][[1]],
RPI
)
)
modRPI
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR == TRUE, "Imputed", "Original")),
modRPI = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
modRPI = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
modRPI
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
modRPI = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
q <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(q)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
q <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(q)
fit$coefficients
step$coefficients
# Stepwise Regression
library(MASS)
fit <- lm(Avg.HR ~ Avg.Pace, data = rpi)
step <- stepAIC(fit, direction="both")
step$anova # display results
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
# step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
q <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(q)
# Stepwise Regression
library(MASS)
fit <- lm(Avg.HR ~ Avg.Pace + Distance, data = rpi)
step <- stepAIC(fit, direction="both")
step$anova # display results
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
q <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(q)
loess(Avg.HR ~ Avg.Pace + Distance, data = rpi)
# Stepwise Regression
library(MASS)
fit <- loess(Avg.HR ~ Avg.Pace + Distance, data = rpi)
step <- stepAIC(fit, direction="both")
# Stepwise Regression
library(MASS)
fit <- loess(Avg.HR ~ Avg.Pace + Distance, data = rpi)
#step <- stepAIC(fit, direction="both")
#step$anova # display results
fit$coefficients
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, Avg.Pace, Distance),
#step$coefficients[[3]][[1]] * Distance +
#step$coefficients[[2]][[1]] * Avg.Pace +
#step$coefficients[[1]][[1]],
RPI
)
)
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, .$Avg.Pace, .$Distance),
#step$coefficients[[3]][[1]] * Distance +
#step$coefficients[[2]][[1]] * Avg.Pace +
#step$coefficients[[1]][[1]],
RPI
)
)
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)),
#step$coefficients[[3]][[1]] * Distance +
#step$coefficients[[2]][[1]] * Avg.Pace +
#step$coefficients[[1]][[1]],
RPI
)
)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)),
#step$coefficients[[3]][[1]] * Distance +
#step$coefficients[[2]][[1]] * Avg.Pace +
#step$coefficients[[1]][[1]],
RPI
)
)
q <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(q)
# Stepwise Regression
library(MASS)
fit <- lm(Avg.HR ~ Avg.Pace + Distance, data = rpi)
step <- stepAIC(fit, direction="both")
step$anova # display results
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
q <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(q)
fit <- loess(Avg.HR ~ Avg.Pace + Distance, data = rpi)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)),
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)),
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
step$coefficients[[3]][[1]] * Distance +
step$coefficients[[2]][[1]] * Avg.Pace +
step$coefficients[[1]][[1]],
RPI
)
)
q <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(q)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 45,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth() # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 45,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(Date, RPI)) # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 45,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
stat_smooth(aes(Date, RPI)) # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 45,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(group = 1)) # formula = y ~ splines::bs(x, 3)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 45,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 0,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 45,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 0,
RPI
)
)
r <-
ggplot(modRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(r)
modAndShiftRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 45,
RPI
)
)
s <-
ggplot(modAndShiftRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(s)
modAndShiftRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 40,
RPI
)
)
s <-
ggplot(modAndShiftRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(s)
modAndShiftRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 30,
RPI
)
)
s <-
ggplot(modAndShiftRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(s)
modAndShiftRPI <-
rpi %>%
mutate(Type = ifelse(is.na(Avg.HR) == TRUE, "Imputed", "Original"),
RPI  = ifelse(is.na(Avg.HR) == TRUE,
predict(fit, data.frame(Avg.Pace, Distance)) - 35,
RPI
)
)
s <-
ggplot(modAndShiftRPI, aes(Date, RPI, color = Type,
label = Title,
label2 = Distance,
label3 = Avg.HR,
label4 = Cadence,
label5 = Temp)) +
geom_point()  +
geom_smooth(aes(group = 1)) # formula = y ~ splines::bs(x, 3)
ggplotly(s)
nrow(modAndShiftRPI)
blogdown:::serve_site()
